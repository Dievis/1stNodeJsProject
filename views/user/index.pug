extends layout

block content
  section.hero.bg-primary.text-white.py-5
    .container.text-center
      h1 Welcome to Home Consumer Products!
      p.lead Find the best products for your home at unbeatable prices.

  section.products.py-5
    .container
      h2.text-center.mb-4 Featured Products
      if products.length > 0
        .row.row-cols-1.row-cols-md-3.g-4
          each product in products
            .col
              .card.h-100.shadow-sm
                .product-image
                  img.card-img-top(src=product.imgURL, alt=product.name)
                .card-body
                  h5.card-title #{product.name}
                  p.card-text.text-muted Category: #{product.category ? product.category.name : 'Uncategorized'}
                  p.card-text.text-success.font-weight-bold $#{product.price}
                .card-footer.bg-transparent.border-0.text-center
                  a.btn.btn-primary(href=`/products/${product._id}`) View Details
                  button.btn.favorite-btn.bg-warning.ms-2(type='button', data-id=product._id, title='Add to favorites')
                    if userFavorites && userFavorites.includes(product._id.toString())
                      i.fas.fa-heart.text-danger 
                    else
                      i.far.fa-heart 
                  button.btn.btn-success.ms-2.add-to-cart-btn(type='button', data-id=product._id, title='Add to cart')
                    i.fas.fa-plus 
      else
        p.text-center.text-muted No products available.

block scripts
  script.
    document.addEventListener('DOMContentLoaded', () => {
      const attachFavoriteEventListeners = () => {
        const favButtons = document.querySelectorAll('.favorite-btn');
        favButtons.forEach(btn => {
          const icon = btn.querySelector('i');
          const productId = btn.getAttribute('data-id');

          // Xóa sự kiện cũ trước khi gắn sự kiện mới
          btn.removeEventListener('click', btn._favoriteClickHandler);

          // Gắn sự kiện mới
          const clickHandler = async () => {
            const isFavorite = icon.classList.contains('text-danger');

            try {
              if (isFavorite) {
                // Xóa sản phẩm khỏi danh sách yêu thích
                const response = await fetch(`/favorites/${productId}`, {
                  method: 'DELETE',
                  headers: { 'Content-Type': 'application/json' }
                });

                if (!response.ok) {
                  throw new Error('Không thể xóa sản phẩm khỏi danh sách yêu thích.');
                }
              } else {
                // Thêm sản phẩm vào danh sách yêu thích
                const response = await fetch(`/favorites`, {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ productId })
                });

                if (!response.ok) {
                  throw new Error('Không thể thêm sản phẩm vào danh sách yêu thích.');
                }
              }

              // Cập nhật giao diện
              icon.classList.toggle('text-danger');
              icon.classList.toggle('fas');
              icon.classList.toggle('far');
            } catch (error) {
              console.error('Error updating favorites:', error.message);
              alert('Đã xảy ra lỗi khi cập nhật danh sách yêu thích.');
            }
          };

          // Lưu handler vào thuộc tính `_favoriteClickHandler` để tránh gắn trùng sự kiện
          btn._favoriteClickHandler = clickHandler;
          btn.addEventListener('click', clickHandler);
        });
      };

      const attachCartEventListeners = () => {
        const cartButtons = document.querySelectorAll('.add-to-cart-btn');
        cartButtons.forEach(btn => {
          const productId = btn.getAttribute('data-id');

          // Xóa sự kiện cũ trước khi gắn sự kiện mới
          const newBtn = btn.cloneNode(true);
          btn.replaceWith(newBtn);

          newBtn.addEventListener('click', async () => {
            try {
              const response = await fetch('/carts/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId, quantity: 1 })
              });

              if (response.ok) {
                alert('Sản phẩm đã được thêm vào giỏ hàng!');
              } else {
                const result = await response.json();
                console.error('Error:', result.message);
                alert('Không thể thêm sản phẩm vào giỏ hàng.');
              }
            } catch (error) {
              console.error('Error adding to cart:', error);
              alert('Đã xảy ra lỗi khi thêm sản phẩm vào giỏ hàng.');
            }
          });
        });
      };

      // Gắn sự kiện
      attachFavoriteEventListeners();
      attachCartEventListeners();
    });