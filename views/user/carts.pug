extends layout

block content
  h1.text-center.mt-4 Giỏ hàng của bạn

  if cartItems.length > 0
    .cart-container
      each item in cartItems
        .cart-item(data-product-id=item.product._id)
          img(src=item.product.imgURL alt=item.product.name width="100")
          .product-info
            h2= item.product.name
            p Giá: #{item.product.price} VND
            p Tổng: #{(item.product.price * item.quantity).toFixed(2)} VND
          .actions
            button.btn.btn-secondary.decrease-quantity(type="button") -
            span.quantity.mx-2 #{item.quantity}
            button.btn.btn-secondary.increase-quantity(type="button") +
            button.btn.btn-danger.ms-3.remove-item(type="button") Xóa khỏi giỏ hàng
          .checkbox.ms-3
            label
              input.choose-item(type="checkbox", checked=item.isChoosed)
              |  Chọn sản phẩm
    .cart-summary.mt-4.text-center
      h3 Tổng giá trị giỏ hàng: #{totalPrice.toFixed(2)} VND
      button.btn.btn-success.mt-3#checkoutBtn(type="button") Thanh toán
  else
    p.text-center.mt-4 Không có sản phẩm nào trong giỏ hàng.

block scripts
  script.
    document.addEventListener('DOMContentLoaded', () => {
      const userId = "#{user._id}";
      const formatter = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' });

      const updateTotal = () => {
        let total = 0;
        document.querySelectorAll('.cart-item').forEach(item => {
          const quantity = parseInt(item.querySelector('.quantity').textContent);
          const priceText = item.querySelector('.product-info p').textContent;
          const price = parseFloat(priceText.replace(/[^\d.-]/g, ''));
          const checked = item.querySelector('.choose-item').checked;
          if (checked) {
            total += quantity * price;
          }
        });

        const summary = document.querySelector('.cart-summary h3');
        if (summary) {
          summary.textContent = `Tổng giá trị giỏ hàng: ${formatter.format(total)}`;
        }
      };

      const attachEventListeners = () => {
        document.querySelectorAll('.cart-item').forEach(cartItem => {
          const productId = cartItem.dataset.productId;
          const decreaseBtn = cartItem.querySelector('.decrease-quantity');
          const increaseBtn = cartItem.querySelector('.increase-quantity');
          const quantitySpan = cartItem.querySelector('.quantity');
          const checkbox = cartItem.querySelector('.choose-item');
          const removeBtn = cartItem.querySelector('.remove-item');

          // Xóa các sự kiện cũ trước khi gắn sự kiện mới
          decreaseBtn.replaceWith(decreaseBtn.cloneNode(true));
          increaseBtn.replaceWith(increaseBtn.cloneNode(true));
          checkbox.replaceWith(checkbox.cloneNode(true));
          removeBtn.replaceWith(removeBtn.cloneNode(true));

          const newDecreaseBtn = cartItem.querySelector('.decrease-quantity');
          const newIncreaseBtn = cartItem.querySelector('.increase-quantity');
          const newCheckbox = cartItem.querySelector('.choose-item');
          const newRemoveBtn = cartItem.querySelector('.remove-item');

          const updateCart = (newQuantity, isChoosed) => {
            fetch(`/carts/${userId}`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                productId,
                quantity: newQuantity,
                isChoosed
              })
            }).then(res => {
              if (!res.ok) {
                return res.json().then(data => { throw new Error(data.message); });
              }
              return res.json();
            }).then(data => {
              console.log('Cập nhật thành công:', data);
              quantitySpan.textContent = newQuantity;
              updateTotal();
            }).catch(err => {
              console.error('Lỗi khi cập nhật giỏ hàng:', err.message);
            });
          };

          newIncreaseBtn.addEventListener('click', () => {
            const currentQty = parseInt(quantitySpan.textContent);
            const newQty = currentQty + 1;
            updateCart(newQty, newCheckbox.checked);
          });

          newDecreaseBtn.addEventListener('click', () => {
            const currentQty = parseInt(quantitySpan.textContent);
            if (currentQty > 1) {
              const newQty = currentQty - 1;
              updateCart(newQty, newCheckbox.checked);
            }
          });

          newCheckbox.addEventListener('change', () => {
            const currentQty = parseInt(quantitySpan.textContent);
            updateCart(currentQty, newCheckbox.checked);
          });

          newRemoveBtn.addEventListener('click', () => {
            if (confirm('Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?')) {
              fetch(`/carts/${userId}/${productId}`, {
                method: 'DELETE'
              }).then(res => {
                if (!res.ok) {
                  return res.json().then(data => { throw new Error(data.message); });
                }
                cartItem.remove();

                updateTotal();

                if (document.querySelectorAll('.cart-item').length === 0) {
                  document.querySelector('.cart-summary').innerHTML = '<p>Giỏ hàng của bạn đang trống.</p>';
                }
              }).catch(err => {
                console.error('Lỗi khi xóa sản phẩm:', err.message);
              });
            }
          });
        });
      };

      attachEventListeners();

      document.getElementById('checkoutBtn').addEventListener('click', () => {
        window.location.href = `/payments/preview/${userId}`;
      });

      updateTotal();
    });
